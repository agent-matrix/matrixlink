name: Release (PyPI)

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write  # for trusted publishing
  contents: write  # to create GitHub Release & upload assets

jobs:
  build:
    name: Build sdist + wheel
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: libs/matrixlink
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: |
          python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: matrixlink-dist
          path: libs/matrixlink/dist/*

  publish-testpypi:
    name: Publish to TestPyPI (pre-releases)
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name, 'v') && contains(github.ref_name, '-')  # e.g. v0.2.0-rc.1
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: matrixlink-dist
          path: dist
      - name: Publish (TestPyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          # password: ${{ secrets.TEST_PYPI_API_TOKEN }}  # use if not using trusted publishing for TestPyPI
      - name: Create GitHub Release (pre-release)
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          files: |
            dist/*.whl
            dist/*.tar.gz

  publish-pypi:
    name: Publish to PyPI (final)
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name, 'v') && !contains(github.ref_name, '-')  # e.g. v0.2.0
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: matrixlink-dist
          path: dist
      - name: Publish (PyPI â€” Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # For Trusted Publishing, omit password and configure on PyPI project settings.
          # password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
