# This GitHub Action workflow builds and publishes a Python package to PyPI and TestPyPI.
# It supports both automated releases from GitHub and manual runs.

name: Release (PyPI)

on:
  # This workflow runs when a new GitHub release is published.
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# Defines the permissions needed for the jobs.
# id-token: write is required for OIDC-based "Trusted Publishing" to PyPI.
# contents: write is required to upload built packages as release assets.
permissions:
  id-token: write
  contents: write

jobs:
  # The 'build' job handles checking out the code, setting up Python,
  # and building the source distribution (sdist) and wheel.
  build:
    name: Build sdist + wheel
    runs-on: ubuntu-latest
    defaults:
      run:
        # Sets the working directory for all 'run' steps in this job.
        # Update this to the directory containing your pyproject.toml.
        working-directory: libs/matrixlink
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: libs/matrixlink/dist/

  # This job publishes pre-releases (e.g., v1.0.0-alpha.1) to TestPyPI.
  # A pre-release is identified by a hyphen in the tag name.
  publish-testpypi:
    name: Publish to TestPyPI (pre-releases)
    needs: build
    runs-on: ubuntu-latest

    # This job runs only for tags containing a hyphen.
    # It checks the tag from the release event or the ref_name for manual runs.
    if: >-
      (github.event_name == 'release' && contains(github.event.release.tag_name, '-')) ||
      (github.event_name == 'workflow_dispatch' && contains(github.ref_name, '-'))

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true

      - name: Attach artifacts to GitHub Release (pre-release)
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          files: |
            dist/*.whl
            dist/*.tar.gz

  # This job publishes final releases (e.g., v1.0.0) to the official PyPI repository.
  publish-pypi:
    name: Publish to PyPI (final)
    needs: build
    runs-on: ubuntu-latest

    # This job runs only for tags that DO NOT contain a hyphen.
    # It checks the tag from the release event or the ref_name for manual runs.
    if: >-
      (github.event_name == 'release' && !contains(github.event.release.tag_name, '-')) ||
      (github.event_name == 'workflow_dispatch' && !contains(github.ref_name, '-'))

    # Configures the environment for Trusted Publishing.
    # This must be set up in your PyPI project settings first.
    environment:
      name: pypi
      url: https://pypi.org/p/matrixlink # Update 'matrixlink' to your package name

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist

      - name: Publish to PyPI with Trusted Publishing
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

      - name: Attach artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
